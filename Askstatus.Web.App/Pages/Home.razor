@page "/"
@attribute [Authorize]

<PageTitle>Askstatus - Dashboard</PageTitle>
<FlexibleAuthorizeView Permissions="@Permissions.ConfigurePowerDevices">
    <Authorized>
        @{
            UserGotNoRights = false;
        }
    </Authorized>
    <NotAuthorized>
        @{
            UserGotNoRights = true;
        }
    </NotAuthorized>
</FlexibleAuthorizeView>
<MudContainer Class="mt-16 px-8" MaxWidth="MaxWidth.False">
    <MudGrid>
        <MudItem xs="12" sm="6" md="6">
            <MudCard>
                <MudCardHeader>
                    <CardHeaderContent>
                        <MudText Typo="Typo.h6">Devices</MudText>
                    </CardHeaderContent>
                    <CardHeaderActions>
                        @if(UserGotNoRights)
                        {
                            <MudIconButton Icon="@Icons.Material.Filled.Devices" Color="@HubIsConnectedColor" />
                        }
                        else
                        {
                            <MudIconButton Icon="@Icons.Material.Filled.Devices" Href="admin/devices" Color="@HubIsConnectedColor" />
                        }
                    </CardHeaderActions>
                </MudCardHeader>
                @foreach (var device in Devices)
                {
                    <MudCardContent>
                        <MudGrid>
                            <MudItem Style="width: 100%">
                                <MudPaper Elevation="2" Class="pa-4" >
                                    @{
                                        Color stateColor = device.IsOnline ? device.State ? Color.Success : Color.Error : Color.Warning;
                                        string stateIcon = ChanelTypeToIcon(device.ChanelType, device.State);
                                        bool prossesing = device.Prosessing;
                                    }
                                    <MudIconButton Disabled="@(prossesing || !(device.IsOnline))" Icon="@stateIcon" Color="@stateColor" aria-label="delete" Size="Size.Medium" @onclick="() => ToggleDevice(device.Id)" title="@(device.State ? "On" : "Off")" />
                                    <MudChip T="string" Variant="Variant.Outlined" Color="@stateColor"><span>@device.Name is @(device.IsOnline ? device.State ? "On" : "Off" : "offline")</span></MudChip>
                                    
                                </MudPaper>
                            </MudItem>
                        </MudGrid>
                    </MudCardContent>
                }
            </MudCard>
        </MudItem>

        <MudItem xs="12" sm="6" md="6">
            <MudCard>
                <MudCardHeader>
                    <CardHeaderContent>
                        <MudText Typo="Typo.h6">Climate</MudText>
                    </CardHeaderContent>
                    <CardHeaderActions>
                        <MudIconButton Icon="@Icons.Material.Filled.Settings" Color="@HubIsConnectedColor" />
                    </CardHeaderActions>
                </MudCardHeader>

                <MudCardContent>
                    <MudPaper Elevation="2" Class="pa-4" Style="height: 50px;"></MudPaper>
                </MudCardContent>
            </MudCard>
        </MudItem>
    </MudGrid>
</MudContainer>
